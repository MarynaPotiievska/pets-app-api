{
  "openapi": "3.0.3",
  "info": {
    "title": "Pet App",
    "description": "This is a Pet App Server.\n\nSome useful links:\n- [The Pet App repository](https://github.com/MarynaPotiievska/pets-app-api)",
    "version": "1.0.0"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://pets-rest-api.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations about authorization"
    },
    {
      "name": "Notices",
      "description": "Operations about notices"
    },
    {
      "name": "Pets",
      "description": "Operations about pets"
    },
    {
      "name": "User",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/notices/category/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by category",
        "operationId": "getNoticesByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "One of: sell, lost-found, for-free",
            "example": "sell",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of notice",
            "example": "Looking my pets",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "The file must be downloaded"
          }
        }
      }
    },
    "/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add new notice by category",
        "operationId": "addNotice",
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Adds a new pet notice to the specified category",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Notice"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Notice"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "fileURL": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dboarinns/image/upload/v1684822680/pet_app/…"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The file must be downloaded"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid value in name"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/notices/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notice by ID",
        "operationId": "getNoticeById",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Get information about the notice by id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Notice"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "fileURL": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dboarinns/image/upload/v1684822680/pet_app/…"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notice not found"
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "removeNotice",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Delete the notice with the specified ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user's favorite notices",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "getFavorite",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No favorite notice found"
          }
        }
      }
    },
    "/notices/favorite/{noticeId}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Adds userID to the notice's favorite array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "addToFavorite",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notice was successfully added to favorite"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Remove userID from the notice's favorite array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "removeFromFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the notice to remove from favorite"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/notices/user/{userId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices of the authorized user",
        "operationId": "getNoticesByUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Get information about the user by id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add your pet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Pet"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "photo": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pet"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "photoURL": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dboarinns/image/upload/v1684859515/pet_app/pets/pet_app/petsundefined.jpg"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },

          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid value in name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The file must be downloaded"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/pets/{petId}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete a pet card",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "petId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Delete with the pet ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The card has been deleted"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get user info",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "xml": {
          "name": "user"
        }
      },
      "Notice": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of notice",
            "enum": ["sell", "lost-found", "for-free"],
            "example": "sell or lost-found, or for-free"
          },
          "title": {
            "type": "string",
            "description": "Title of notice",
            "example": "Looking my pets"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "minLength": 2,
            "maxLength": 16,
            "example": "Adel"
          },
          "date": {
            "type": "string",
            "description": "Pet's birthday",
            "pattern": "^\\d{2}([.])\\d{2}([.])\\d{4}$",
            "example": "10.02.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "minLength": 2,
            "maxLength": 16,
            "example": "Сhihuahua"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "pattern": "^[A-Za-z\\s]+,\\s*[A-Za-z\\s]+$",
            "example": "Kiev, Kiev region"
          },
          "price": {
            "type": "number",
            "minimum": 1,
            "description": "Price for pet is required for category \"sell\"",
            "example": "2000"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "female"
          },
          "comments": {
            "type": "string",
            "description": "Comments about pet",
            "minLength": 8,
            "maxLength": 120,
            "example": "The puppy is kind, has special features in the matter"
          }
        },
        "required": [
          "category",
          "title",
          "name",
          "date",
          "breed",
          "location",
          "sex",
          "file"
        ]
      },
      "Pet": {
        "type": "object",
        "required": ["name", "birthday", "breed", "photo"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",

            "minLength": 2,
            "maxLength": 16,
            "example": "Dolly"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "pattern": "^\\d{2}([.])\\d{2}([.])\\d{4}$",
            "example": "12.03.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",

            "minLength": 2,
            "maxLength": 16,
            "example": "spitz"
          },
          "comments": {
            "type": "string",
            "description": "Comments about pet",
            "minLength": 8,
            "maxLength": 120,
            "example": "Тhis is my favorite dog"
          }
        }
      },
      "GetNoticeResponse": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Notice"
            },
            {
              "type": "object",
              "properties": {
                "fileURL": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://res.cloudinary.com/dboarinns/image/upload/v1684822680/pet_app/…"
                }
              }
            }
          ]
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          },
          "pet": {
            "type": "object",
            "$ref": "#/components/schemas/Pet"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
